{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/stock/stock.component.css","webpack:///./src/app/stock/stock.component.html","webpack:///./src/app/stock/stock.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n  <!-- on click will get the list of todo for the ngfor to iterate as shown below -->\\n  <button (click)=\\\"get_my_todo()\\\">GET todos</button>\\n</div>\\n\\n<ul>\\n  <li *ngFor=\\\"let todo of todos\\\" >\\n    -- user id: {{todo.userId}}\\n    -- id: {{todo.id}}\\n    -- title: {{todo.title}}\\n    -- completed: {{todo.completed}}  \\n  </li>\\n</ul> \\n\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to generic api section\\n  </h1>\\n  <!-- on click will get the list of generic api for the ngfor to iterate as shown below -->\\n  <button (click)=\\\"get_my_generic()\\\">GET generic response</button>\\n</div>\\n\\n<ul>\\n  <li *ngFor=\\\"let generic of generics\\\" >\\n    -- id: {{generic.id}}\\n    -- title: {{generic.title}}\\n    -- body: {{generic.body}}\\n  </li>\\n</ul> \"","import { Component } from '@angular/core';\n\nimport { DataService } from './data.service';\nimport { Todo } from './model.todo';\nimport { Generic } from './model.generic';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title: string = 'aws-s3-ng try it now';\n  private todos : Todo[] = [];\n  private generics : Generic[] = [];\n\n  constructor(private dataservice: DataService){\n    console.log('inside constructor');\n    \n  }\n  ///get_my_todo()\n  // will display a to do list based on the ToDo model \n  public get_my_todo(){\n    console.log('inside my to dos');\n    this.dataservice.get_todo().subscribe((res : Todo[])=>{\n      this.todos = res;\n    });\n    return this.todos; \n  }\n  ///get_my_generic_call()\n  // will display a generic response based on the generic model \n  public get_my_generic(){\n    console.log('inside my generic api');\n    this.dataservice.get_generic().subscribe((res : Generic[])=>{\n      this.generics = res;\n    });\n    return this.generics; \n  }\n\n\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { StockComponent } from './stock/stock.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StockComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Todo } from './model.todo';\nimport { Generic } from './model.generic';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  todoApi: string = 'https://jsonplaceholder.typicode.com/todos';\n  genericApi: string = 'http://localhost:3000/generics';\n\n  constructor(private httpClient: HttpClient) {\n  }\n///get_todo()\n// will get a list of todos from mock server\n  public get_todo() {\n    return this.httpClient.get<Todo[]>(`${this.todoApi}`);\n    //return this.httpClient.get<Todo[]>(`${this.todoApi}/1`);\n  }\n\n///get_generic()\n// will get a list of generic service model items\n  public get_generic() {\n    return this.httpClient.get<Generic[]>(`${this.genericApi}`);\n\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b2NrL3N0b2NrLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  stock works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stock',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.css']\n})\nexport class StockComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}